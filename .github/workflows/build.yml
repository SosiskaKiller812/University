name: Build & SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lab: [lab1, lab2]  # Матрица для параллельного выполнения
        include:
          - lab: lab1
            projectKey: sosiskakiller812_lab1
          - lab: lab2  
            projectKey: sosiskakiller812_lab2

    env:
      SONAR_ORG: sosiskakiller812
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v4

      - name: Build ${{ matrix.lab }}
        run: |
          rm -rf ${{ matrix.lab }}/build
          mkdir -p ${{ matrix.lab }}/build
          cd ${{ matrix.lab }}/build
          cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          build-wrapper-linux-x86-64 --out-dir ../build_wrapper make

      - name: SonarCloud scan ${{ matrix.lab }}
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ matrix.projectKey }}
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=${{ matrix.lab }}/src,${{ matrix.lab }}/include
            -Dsonar.cfamily.build-wrapper-output=${{ matrix.lab }}/build_wrapper
            -Dsonar.coverage.exclusions=**
            -Dsonar.cfamily.skipCoverage=true
